{"version":3,"file":"index.es.js","sources":["../src/default-value.ts","../src/transformer.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\n\nimport type { ThemeTool } from './types';\n\nexport const font: ThemeTool['font'] = {\n    typography: '',\n    code: '',\n};\n\nexport const size: ThemeTool['size'] = {\n    radius: '0',\n    lineWidth: '1px',\n};\n\nexport const mixin: ThemeTool['mixin'] = {\n    scrollbar: () => '',\n    shadow: () => '',\n    border: () => '',\n};\n\nexport const slots: ThemeTool['slots'] = {\n    icon: (id: string) => {\n        const div = document.createElement('div');\n        div.className = 'milkdown-icon';\n        div.textContent = id;\n        return div;\n    },\n    label: (id: string) => {\n        return id;\n    },\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Color, PR } from './types';\n\nexport const themeColor = (hex: string) => {\n    if (hex.startsWith('rgba')) {\n        return hex.slice(5, -1).split(',').slice(0, -1).join(',');\n    }\n    if (hex.startsWith('rgb')) {\n        return hex.slice(4, -1);\n    }\n\n    const hex2rgb = (hex: string) => {\n        const rgbShorthandRegex = /^([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        const rgbRegex = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\n        const parse16 = (x: string) => parseInt(x, 16);\n\n        const fullHex = hex.slice(1).replace(rgbShorthandRegex, (_, r, g, b) => {\n            return r + r + g + g + b + b;\n        });\n\n        const [ok, r, g, b] = fullHex.match(rgbRegex) || [];\n\n        return ok ? [r, g, b].map(parse16) : null;\n    };\n\n    const rgb = hex2rgb(hex);\n    if (!rgb) {\n        console.warn(`Invalid hex: ${hex}`);\n        return hex;\n    }\n\n    return rgb.join(', ');\n};\n\nexport const obj2var = <T extends string, U>(x: PR<T, U> = {}, transform = (x: U): string => `${x}`) =>\n    Object.entries(x)\n        .map(([k, v]) => {\n            return `--${k}: ${transform(v as U)};`;\n        })\n        .join('\\n');\nexport const obj2color = (x: PR<Color> = {}) => obj2var(x, themeColor);\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { injectGlobal } from '@emotion/css';\n\nimport * as D from './default-value';\nimport { obj2color, obj2var } from './transformer';\nimport { Color, PR, ThemePack, ThemeTool } from './types';\n\nexport const injectVar = (themePack: ThemePack) => {\n    const { color = {}, font, size = {} } = themePack;\n    const css = injectGlobal;\n    css`\n        :root {\n            ${obj2color(color)};\n            ${obj2var(font, (x) => x.join(', '))};\n            ${obj2var(size)};\n        }\n    `;\n};\n\nexport const pack2Tool = (themePack: ThemePack): ThemeTool => {\n    const { font, size = {}, mixin: _mixin, slots: _slots, global } = themePack;\n\n    const palette = (key: Color, alpha = 1) => {\n        return `rgba(var(--${key}), ${alpha})`;\n    };\n    const toMap = <T extends string, U>(x: PR<T, U> = {}): PR<T> =>\n        Object.fromEntries(\n            Object.keys(x).map((k) => {\n                return [k, `var(--${k})`];\n            }),\n        ) as PR<T>;\n\n    const mixinTool: Pick<ThemeTool, 'palette' | 'size' | 'font'> = {\n        palette,\n        size: {\n            ...D.size,\n            ...toMap(size),\n        },\n        font: {\n            ...D.font,\n            ...toMap(font),\n        },\n    };\n    const mixin = {\n        ...D.mixin,\n        ..._mixin?.(mixinTool),\n    };\n\n    const slotsTool: typeof mixinTool & { mixin: typeof mixin } = {\n        ...mixinTool,\n        mixin,\n    };\n\n    const slots = {\n        ...D.slots,\n        ..._slots?.(slotsTool),\n    };\n\n    const tool: ThemeTool = {\n        ...slotsTool,\n        slots,\n    };\n\n    global?.(tool);\n\n    return tool;\n};\n\nexport type { Color, Font, Icon, Size, ThemePack, ThemeTool } from './types';\n"],"names":["font","size","D.size","D.font","mixin","D.mixin","slots","D.slots"],"mappings":";;;;;;;;;;;;;;;;;;;;MAIa,OAA0B;AAAA,EACnC,YAAY;AAAA,EACZ,MAAM;AAAA;MAGG,OAA0B;AAAA,EACnC,QAAQ;AAAA,EACR,WAAW;AAAA;MAGF,QAA4B;AAAA,EACrC,WAAW,MAAM;AAAA,EACjB,QAAQ,MAAM;AAAA,EACd,QAAQ,MAAM;AAAA;MAGL,QAA4B;AAAA,EACrC,MAAM,CAAC,OAAe;UACZ,MAAM,SAAS,cAAc;QAC/B,YAAY;QACZ,cAAc;WACX;AAAA;AAAA,EAEX,OAAO,CAAC,OAAe;WACZ;AAAA;AAAA;MCzBF,aAAa,CAAC,QAAgB;MACnC,IAAI,WAAW,SAAS;WACjB,IAAI,MAAM,GAAG,IAAI,MAAM,KAAK,MAAM,GAAG,IAAI,KAAK;AAAA;MAErD,IAAI,WAAW,QAAQ;WAChB,IAAI,MAAM,GAAG;AAAA;QAGlB,UAAU,CAAC,SAAgB;UACvB,oBAAoB;UACpB,WAAW;UACX,UAAU,CAAC,MAAc,SAAS,GAAG;UAErC,UAAU,KAAI,MAAM,GAAG,QAAQ,mBAAmB,CAAC,GAAG,IAAG,IAAG,OAAM;aAC7D,KAAI,KAAI,KAAI,KAAI,KAAI;AAAA;UAGzB,CAAC,IAAI,GAAG,GAAG,KAAK,QAAQ,MAAM,aAAa;WAE1C,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,WAAW;AAAA;QAGnC,MAAM,QAAQ;MAChB,CAAC,KAAK;YACE,KAAK,gBAAgB;WACtB;AAAA;SAGJ,IAAI,KAAK;AAAA;MAGP,UAAU,CAAsB,IAAc,IAAI,YAAY,CAAC,OAAiB,GAAG,SAC5F,OAAO,QAAQ,GACV,IAAI,CAAC,CAAC,GAAG,OAAO;SACN,KAAK,MAAM,UAAU;AAAA,GAE/B,KAAK;MACD,YAAY,CAAC,IAAe,OAAO,QAAQ,GAAG;MCjC9C,YAAY,CAAC,cAAyB;QACzC,EAAE,QAAQ,IAAI,aAAM,cAAO,OAAO;QAClC,MAAM;;;cAGF,UAAU;AAAA,cACV,QAAQ,OAAM,CAAC,MAAM,EAAE,KAAK;AAAA,cAC5B,QAAQ;AAAA;AAAA;AAAA;MAKT,YAAY,CAAC,cAAoC;QACpD,QAAEA,cAAMC,SAAO,IAAI,OAAO,QAAQ,OAAO,QAAQ,WAAW;QAE5D,UAAU,CAAC,KAAY,QAAQ,MAAM;WAChC,cAAc,SAAS;AAAA;QAE5B,QAAQ,CAAsB,IAAc,OAC9C,OAAO,YACH,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM;WACf,CAAC,GAAG,SAAS;AAAA;QAI1B,YAA0D;AAAA,IAC5D;AAAA,IACA,MAAM,kCACCC,OACA,MAAMD;AAAAA,IAEb,MAAM,kCACCE,OACA,MAAMH;AAAAA;QAGXI,UAAQ,kCACPC,QACA,iCAAS;QAGV,YAAwD,iCACvD,YADuD;AAAA,WAE1DD;AAAAA;QAGEE,UAAQ,kCACPC,QACA,iCAAS;QAGV,OAAkB,iCACjB,YADiB;AAAA,WAEpBD;AAAAA;mCAGK;SAEF;AAAA;;"}