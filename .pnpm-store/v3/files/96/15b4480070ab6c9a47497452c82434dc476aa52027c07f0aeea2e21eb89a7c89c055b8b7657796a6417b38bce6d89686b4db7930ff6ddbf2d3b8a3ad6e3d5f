{"version":3,"file":"index.es.js","sources":["../src/style.ts","../src/utility.ts","../src/config.ts","../src/prose-plugin/props.ts","../src/item.ts","../src/prose-plugin/status.ts","../src/prose-plugin/dropdown.ts","../src/prose-plugin/input.ts","../src/prose-plugin/view.ts","../src/prose-plugin/index.ts","../src/index.ts"],"sourcesContent":["/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, ThemeTool } from '@milkdown/core';\n\nconst itemStyle = ({ font, palette }: ThemeTool, { css }: Emotion) => {\n    return css`\n        .slash-dropdown-item {\n            display: flex;\n            gap: 2rem;\n            height: 3rem;\n            padding: 0 1rem;\n            align-items: center;\n            justify-content: flex-start;\n            cursor: pointer;\n            line-height: 2;\n            font-family: ${font.typography};\n            font-size: 0.875rem;\n\n            transition: all 0.2s ease-in-out;\n\n            &,\n            .icon {\n                color: ${palette('neutral', 0.87)};\n                transition: all 0.2s ease-in-out;\n            }\n\n            &.hide {\n                display: none;\n            }\n\n            &.active {\n                background: ${palette('secondary', 0.12)};\n                &,\n                .icon {\n                    color: ${palette('primary')};\n                }\n            }\n            `;\n};\n\nexport const injectStyle = (themeTool: ThemeTool, emotion: Emotion) => {\n    const { mixin, size, palette } = themeTool;\n    const style = emotion.css`\n        width: 20.5rem;\n        max-height: 20.5rem;\n        overflow-y: auto;\n        ${mixin.border?.()};\n        border-radius: ${size.radius};\n        position: absolute;\n        background: ${palette('surface')};\n\n        ${mixin.shadow?.()};\n\n        &.hide {\n            display: none;\n        }\n\n        ${mixin.scrollbar?.()};\n\n        ${itemStyle(themeTool, emotion)}\n    `;\n    return style;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { ThemeTool } from '@milkdown/core';\nimport type { Icon } from '@milkdown/design-system';\nimport type { Command, Node } from '@milkdown/prose';\nimport type { Utils } from '@milkdown/utils';\n\nimport { injectStyle } from './style';\n\nexport const createDropdown = (utils: Utils) => {\n    const div = document.createElement('div');\n    div.setAttribute('role', 'listbox');\n    div.setAttribute('tabindex', '-1');\n    const style = utils.getStyle(injectStyle);\n\n    if (style) {\n        div.classList.add(style);\n    }\n\n    div.classList.add('slash-dropdown', 'hide');\n\n    return div;\n};\n\ntype ItemOptions = {\n    textClassName: string;\n};\nexport const createDropdownItem = (themeTool: ThemeTool, text: string, icon: Icon, options?: Partial<ItemOptions>) => {\n    const textClassName = options?.textClassName ?? 'text';\n\n    const div = document.createElement('div');\n    div.setAttribute('role', 'option');\n    div.classList.add('slash-dropdown-item');\n\n    const iconSpan = themeTool.slots.icon(icon);\n\n    const textSpan = document.createElement('span');\n    textSpan.textContent = text;\n    textSpan.className = textClassName;\n\n    div.appendChild(iconSpan);\n    div.appendChild(textSpan);\n\n    return div;\n};\n\nexport const getDepth = (node: Node) => {\n    let cur = node;\n    let depth = 0;\n    while (cur.childCount) {\n        cur = cur.child(0);\n        depth += 1;\n    }\n\n    return depth;\n};\n\nconst cleanUp: Command = (state, dispatch) => {\n    const { selection } = state;\n    const { $from } = selection;\n    const tr = state.tr.deleteRange($from.start(), $from.pos);\n    dispatch?.(tr);\n    return false;\n};\n\nexport const cleanUpAndCreateNode =\n    (createCommand: () => void): Command =>\n    (state, dispatch, view) => {\n        if (view) {\n            cleanUp(state, dispatch, view);\n            createCommand();\n        }\n        return true;\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { commandsCtx, schemaCtx, themeToolCtx } from '@milkdown/core';\nimport type { Ctx } from '@milkdown/ctx';\nimport {\n    InsertHr,\n    InsertImage,\n    InsertTable,\n    TurnIntoCodeFence,\n    TurnIntoHeading,\n    TurnIntoTaskList,\n    WrapInBlockquote,\n    WrapInBulletList,\n    WrapInOrderedList,\n} from '@milkdown/preset-gfm';\nimport { EditorState, Node } from '@milkdown/prose';\n\nimport { WrappedAction } from './item';\nimport { createDropdownItem } from './utility';\n\ntype Nullable<T> = T | null | undefined;\n\nexport type StatusConfig = {\n    placeholder?: Nullable<string>;\n    actions?: Nullable<WrappedAction[]>;\n};\n\nexport type StatusConfigBuilderParams = {\n    content: string;\n    isTopLevel: boolean;\n    parentNode: Node;\n    state: EditorState;\n};\n\nexport type StatusConfigBuilder = (params: StatusConfigBuilderParams) => Nullable<StatusConfig>;\n\nexport type Config = (ctx: Ctx) => StatusConfigBuilder;\n\nexport const defaultActions = (ctx: Ctx, input = '/'): WrappedAction[] => {\n    const { nodes } = ctx.get(schemaCtx);\n    const actions: Array<WrappedAction & { keyword: string[]; typeName: string }> = [\n        {\n            id: 'h1',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Large Heading', 'h1'),\n            command: () => ctx.get(commandsCtx).call(TurnIntoHeading, 1),\n            keyword: ['h1', 'large heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h2',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Medium Heading', 'h2'),\n            command: () => ctx.get(commandsCtx).call(TurnIntoHeading, 2),\n            keyword: ['h2', 'medium heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'h3',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Small Heading', 'h3'),\n            command: () => ctx.get(commandsCtx).call(TurnIntoHeading, 3),\n            keyword: ['h3', 'small heading'],\n            typeName: 'heading',\n        },\n        {\n            id: 'bulletList',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Bullet List', 'bulletList'),\n            command: () => ctx.get(commandsCtx).call(WrapInBulletList),\n            keyword: ['bullet list', 'ul'],\n            typeName: 'bullet_list',\n        },\n        {\n            id: 'orderedList',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Ordered List', 'orderedList'),\n            command: () => ctx.get(commandsCtx).call(WrapInOrderedList),\n            keyword: ['ordered list', 'ol'],\n            typeName: 'ordered_list',\n        },\n        {\n            id: 'taskList',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Task List', 'taskList'),\n            command: () => ctx.get(commandsCtx).call(TurnIntoTaskList),\n            keyword: ['task list', 'task'],\n            typeName: 'task_list_item',\n        },\n        {\n            id: 'image',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Image', 'image'),\n            command: () => ctx.get(commandsCtx).call(InsertImage),\n            keyword: ['image'],\n            typeName: 'image',\n        },\n        {\n            id: 'blockquote',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Quote', 'quote'),\n            command: () => ctx.get(commandsCtx).call(WrapInBlockquote),\n            keyword: ['quote', 'blockquote'],\n            typeName: 'blockquote',\n        },\n        {\n            id: 'table',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Table', 'table'),\n            command: () => ctx.get(commandsCtx).call(InsertTable),\n            keyword: ['table'],\n            typeName: 'table',\n        },\n        {\n            id: 'code',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Code Fence', 'code'),\n            command: () => ctx.get(commandsCtx).call(TurnIntoCodeFence),\n            keyword: ['code'],\n            typeName: 'fence',\n        },\n        {\n            id: 'divider',\n            dom: createDropdownItem(ctx.get(themeToolCtx), 'Divide Line', 'divider'),\n            command: () => ctx.get(commandsCtx).call(InsertHr),\n            keyword: ['divider', 'hr'],\n            typeName: 'hr',\n        },\n    ];\n\n    const userInput = input.slice(1).toLocaleLowerCase();\n\n    return actions\n        .filter((action) => !!nodes[action.typeName] && action.keyword.some((keyword) => keyword.includes(userInput)))\n        .map(({ keyword, typeName, ...action }) => action);\n};\n\nexport const defaultConfig: Config = (ctx) => {\n    return ({ content, isTopLevel }) => {\n        if (!isTopLevel) return null;\n\n        if (!content) {\n            return { placeholder: 'Type / to use the slash commands...' };\n        }\n\n        if (content.startsWith('/')) {\n            return content === '/'\n                ? {\n                      placeholder: 'Type to filter...',\n                      actions: defaultActions(ctx),\n                  }\n                : {\n                      actions: defaultActions(ctx, content),\n                  };\n        }\n\n        return null;\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Emotion, ThemeTool } from '@milkdown/core';\nimport { Decoration, DecorationSet, EditorState, EditorView, findParentNode } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport type { Status } from './status';\n\nexport type Props = ReturnType<typeof createProps>;\n\nconst createEmptyStyle = ({ font, palette }: ThemeTool, { css }: Emotion) => css`\n    position: relative;\n    &::before {\n        position: absolute;\n        cursor: text;\n        font-family: ${font.typography};\n        font-size: 0.875rem;\n        color: ${palette('neutral', 0.6)};\n        content: attr(data-text);\n        height: 100%;\n        display: flex;\n        align-items: center;\n    }\n`;\n\nconst createSlashStyle = (_: ThemeTool, { css }: Emotion) => css`\n    &::before {\n        left: 0.5rem;\n    }\n`;\n\nexport const createProps = (status: Status, utils: Utils) => {\n    const emptyStyle = utils.getStyle(createEmptyStyle);\n    const slashStyle = utils.getStyle(createSlashStyle);\n\n    return {\n        handleKeyDown: (_: EditorView, event: Event) => {\n            if (status.isEmpty()) {\n                return false;\n            }\n            if (!(event instanceof KeyboardEvent)) {\n                return false;\n            }\n\n            if (!['ArrowUp', 'ArrowDown', 'Enter'].includes(event.key)) {\n                return false;\n            }\n\n            return true;\n        },\n        decorations: (state: EditorState) => {\n            const paragraph = findParentNode(({ type }) => type.name === 'paragraph')(state.selection);\n\n            if (\n                !paragraph ||\n                paragraph.node.childCount > 1 ||\n                state.selection.$from.parentOffset !== paragraph.node.textContent.length\n            ) {\n                status.clear();\n                return;\n            }\n\n            const { placeholder, actions } = status.update({\n                parentNode: state.selection.$from.node(state.selection.$from.depth - 1),\n                isTopLevel: state.selection.$from.depth === 1,\n                content: paragraph.node.textContent,\n                state,\n            });\n\n            if (!placeholder) {\n                return null;\n            }\n\n            const createDecoration = (text: string, className: (string | undefined)[]) => {\n                const pos = paragraph.pos;\n                return DecorationSet.create(state.doc, [\n                    Decoration.node(pos, pos + paragraph.node.nodeSize, {\n                        class: className.filter((x) => x).join(' '),\n                        'data-text': text,\n                    }),\n                ]);\n            };\n\n            if (actions.length) {\n                return createDecoration(placeholder, [emptyStyle, slashStyle, 'empty-node', 'is-slash']);\n            }\n\n            return createDecoration(placeholder, [emptyStyle, 'empty-node']);\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport type { Command } from '@milkdown/prose';\n\nimport { cleanUpAndCreateNode } from './utility';\n\nexport type Action = {\n    id: string;\n    $: HTMLElement;\n    command: Command;\n};\n\nexport type WrappedAction = Pick<Action, 'id'> & {\n    command: () => void;\n    dom: HTMLElement;\n};\n\nexport const transformAction = (action: WrappedAction): Action => ({\n    id: action.id,\n    $: action.dom,\n    command: cleanUpAndCreateNode(action.command),\n});\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { StatusConfigBuilder, StatusConfigBuilderParams } from '..';\nimport { Action, transformAction } from '../item';\n\nexport type StatusCtx = {\n    placeholder: string | null;\n    actions: Action[];\n};\n\nconst createStatusCtx = (): StatusCtx => {\n    return {\n        placeholder: null,\n        actions: [],\n    };\n};\n\nexport type Status = ReturnType<typeof createStatus>;\n\nexport const createStatus = (builder: StatusConfigBuilder) => {\n    const statusCtx = createStatusCtx();\n\n    return {\n        get: () => statusCtx,\n        clear: () => {\n            statusCtx.placeholder = null;\n            statusCtx.actions = [];\n        },\n        update: (builderParams: StatusConfigBuilderParams) => {\n            const config = builder(builderParams);\n            statusCtx.placeholder = config?.placeholder ?? null;\n            statusCtx.actions = (config?.actions ?? []).map(transformAction);\n            return statusCtx;\n        },\n        isEmpty: () => statusCtx.actions.length === 0,\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\ntype Listeners = {\n    mouseEnter: EventListener;\n    mouseLeave: EventListener;\n};\n\nexport const renderDropdown = (status: Status, dropdownElement: HTMLElement, listeners: Listeners): boolean => {\n    const { actions } = status.get();\n\n    if (!actions.length) {\n        dropdownElement.classList.add('hide');\n        return false;\n    }\n\n    dropdownElement.childNodes.forEach((child) => {\n        child.removeEventListener('mouseenter', listeners.mouseEnter);\n        child.removeEventListener('mouseleave', listeners.mouseLeave);\n    });\n\n    // Reset dropdownElement children\n    dropdownElement.textContent = '';\n\n    actions.forEach(({ $ }) => {\n        $.classList.remove('active');\n        $.addEventListener('mouseenter', listeners.mouseEnter);\n        $.addEventListener('mouseleave', listeners.mouseLeave);\n        dropdownElement.appendChild($);\n    });\n\n    dropdownElement.classList.remove('hide');\n\n    actions[0].$.classList.add('active');\n    requestAnimationFrame(() => {\n        scrollIntoView(actions[0].$, {\n            scrollMode: 'if-needed',\n            block: 'nearest',\n            inline: 'nearest',\n        });\n    });\n\n    return true;\n};\n","/* Copyright 2021, Milkdown by Mirone. */\n\nimport { EditorView } from '@milkdown/prose';\nimport scrollIntoView from 'smooth-scroll-into-view-if-needed';\n\nimport { Status } from './status';\n\nexport const createMouseManager = () => {\n    let mouseLock = false;\n\n    return {\n        isLock: () => mouseLock,\n        lock: () => {\n            mouseLock = true;\n        },\n        unlock: () => {\n            mouseLock = false;\n        },\n    };\n};\nexport type MouseManager = ReturnType<typeof createMouseManager>;\n\nexport const handleMouseMove = (mouseManager: MouseManager) => () => {\n    mouseManager.unlock();\n};\n\nexport const handleMouseEnter = (status: Status, mouseManager: MouseManager) => (e: MouseEvent) => {\n    if (mouseManager.isLock()) return;\n    const { actions } = status.get();\n    const active = actions.findIndex((x) => x.$.classList.contains('active'));\n    if (active >= 0) {\n        actions[active].$.classList.remove('active');\n    }\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.add('active');\n};\n\nexport const handleMouseLeave = () => (e: MouseEvent) => {\n    const { target } = e;\n    if (!(target instanceof HTMLElement)) return;\n    target.classList.remove('active');\n};\n\nexport const handleClick =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement) =>\n    (e: Event): void => {\n        const { target } = e;\n        if (!(target instanceof HTMLElement)) return;\n        if (!view) return;\n\n        const stop = () => {\n            e.stopPropagation();\n            e.preventDefault();\n        };\n\n        const { actions } = status.get();\n\n        const el = Object.values(actions).find(({ $ }) => $.contains(target));\n        if (!el) {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            stop();\n\n            return;\n        }\n\n        stop();\n        el.command(view.state, view.dispatch, view);\n    };\n\nexport const handleKeydown =\n    (status: Status, view: EditorView, dropdownElement: HTMLElement, mouseManager: MouseManager) => (e: Event) => {\n        if (!(e instanceof KeyboardEvent)) return;\n        if (!mouseManager.isLock()) mouseManager.lock();\n\n        const { key } = e;\n        if (status.isEmpty()) return;\n        if (!['ArrowDown', 'ArrowUp', 'Enter', 'Escape'].includes(key)) return;\n\n        const { actions } = status.get();\n\n        let active = actions.findIndex(({ $ }) => $.classList.contains('active'));\n        if (active < 0) active = 0;\n\n        const moveActive = (next: number) => {\n            actions[active].$.classList.remove('active');\n            actions[next].$.classList.add('active');\n            scrollIntoView(actions[next].$, {\n                scrollMode: 'if-needed',\n                block: 'nearest',\n                inline: 'nearest',\n            });\n        };\n\n        if (key === 'ArrowDown') {\n            const next = active === actions.length - 1 ? 0 : active + 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'ArrowUp') {\n            const next = active === 0 ? actions.length - 1 : active - 1;\n\n            moveActive(next);\n            return;\n        }\n\n        if (key === 'Escape') {\n            if (status.isEmpty()) return;\n\n            status.clear();\n            dropdownElement.classList.add('hide');\n            return;\n        }\n\n        actions[active].command(view.state, view.dispatch, view);\n        actions[active].$.classList.remove('active');\n    };\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { calculateNodePosition, EditorView } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport { createDropdown } from '../utility';\nimport { renderDropdown } from './dropdown';\nimport {\n    createMouseManager,\n    handleClick,\n    handleKeydown,\n    handleMouseEnter,\n    handleMouseLeave,\n    handleMouseMove,\n} from './input';\nimport { Status } from './status';\n\nconst calculatePosition = (view: EditorView, dropdownElement: HTMLElement) => {\n    calculateNodePosition(view, dropdownElement, (selected, target, parent) => {\n        const $editor = dropdownElement.parentElement;\n        if (!$editor) {\n            throw new Error();\n        }\n\n        let left = selected.left - parent.left;\n        let top = selected.bottom - parent.top + 14 + $editor.scrollTop;\n\n        if (left < 0) {\n            left = 0;\n        }\n\n        if (window.innerHeight - selected.bottom < target.height) {\n            top = selected.top - parent.top - target.height - 14 + $editor.scrollTop;\n        }\n        return [top, left];\n    });\n};\n\nexport const createView = (status: Status, view: EditorView, utils: Utils) => {\n    const wrapper = view.dom.parentNode;\n    if (!wrapper) return {};\n\n    const dropdownElement = createDropdown(utils);\n    const mouseManager = createMouseManager();\n    wrapper.appendChild(dropdownElement);\n\n    const _mouseMove = handleMouseMove(mouseManager);\n    const _mouseDown = handleClick(status, view, dropdownElement);\n    const _keydown = handleKeydown(status, view, dropdownElement, mouseManager);\n    const _mouseEnter = handleMouseEnter(status, mouseManager);\n    const _mouseLeave = handleMouseLeave();\n\n    wrapper.addEventListener('mousemove', _mouseMove);\n    wrapper.addEventListener('mousedown', _mouseDown);\n    wrapper.addEventListener('keydown', _keydown);\n\n    return {\n        update: (view: EditorView) => {\n            const show = renderDropdown(status, dropdownElement, {\n                mouseEnter: _mouseEnter as EventListener,\n                mouseLeave: _mouseLeave as EventListener,\n            });\n\n            if (!show) return;\n\n            calculatePosition(view, dropdownElement);\n        },\n\n        destroy: () => {\n            wrapper.removeEventListener('mousemove', _mouseMove);\n            wrapper.removeEventListener('mousedown', _mouseDown);\n            wrapper.removeEventListener('keydown', _keydown);\n            dropdownElement.remove();\n        },\n    };\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { Plugin, PluginKey } from '@milkdown/prose';\nimport { Utils } from '@milkdown/utils';\n\nimport type { StatusConfigBuilder } from '..';\nimport { createProps } from './props';\nimport { createStatus } from './status';\nimport { createView } from './view';\n\nexport const key = 'MILKDOWN_PLUGIN_SLASH';\n\nexport const createSlashPlugin = (utils: Utils, builder: StatusConfigBuilder) => {\n    const status = createStatus(builder);\n\n    return new Plugin({\n        key: new PluginKey(key),\n        props: createProps(status, utils),\n        view: (view) => createView(status, view, utils),\n    });\n};\n","/* Copyright 2021, Milkdown by Mirone. */\nimport { AtomList, createPlugin } from '@milkdown/utils';\n\nimport type { Config } from './config';\nimport { defaultConfig } from './config';\nimport { createSlashPlugin } from './prose-plugin';\n\nexport type { Config, StatusConfig, StatusConfigBuilder, StatusConfigBuilderParams } from './config';\nexport { defaultActions, defaultConfig } from './config';\nexport { createDropdownItem } from './utility';\n\nexport type Options = {\n    config: Config;\n};\n\nexport const slashPlugin = createPlugin<string, Options>((utils, options) => {\n    const slashConfig = options?.config ?? defaultConfig;\n\n    return {\n        prosePlugins: (_, ctx) => {\n            const config = slashConfig(ctx);\n\n            const plugin = createSlashPlugin(utils, config);\n\n            return [plugin];\n        },\n    };\n});\n\nexport const slash = AtomList.create([slashPlugin()]);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAGA,MAAM,YAAY,CAAC,EAAE,MAAM,WAAsB,EAAE,UAAmB;SAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAUgB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAOP,QAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BASd,QAAQ,aAAa;AAAA;AAAA;AAAA,6BAGtB,QAAQ;AAAA;AAAA;AAAA;AAAA;MAMxB,cAAc,CAAC,WAAsB,YAAqB;;QAC7D,EAAE,OAAO,MAAM,YAAY;QAC3B,QAAQ,QAAQ;AAAA;AAAA;AAAA;AAAA,UAIhB,YAAM,WAAN;AAAA,yBACe,KAAK;AAAA;AAAA,sBAER,QAAQ;AAAA;AAAA,UAEpB,YAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAMA,YAAM,cAAN;AAAA;AAAA,UAEA,UAAU,WAAW;AAAA;SAEpB;AAAA;MCpDE,iBAAiB,CAAC,UAAiB;QACtC,MAAM,SAAS,cAAc;MAC/B,aAAa,QAAQ;MACrB,aAAa,YAAY;QACvB,QAAQ,MAAM,SAAS;MAEzB,OAAO;QACH,UAAU,IAAI;AAAA;MAGlB,UAAU,IAAI,kBAAkB;SAE7B;AAAA;MAME,qBAAqB,CAAC,WAAsB,MAAc,MAAY,YAAmC;;QAC5G,gBAAgB,yCAAS,kBAAT,YAA0B;QAE1C,MAAM,SAAS,cAAc;MAC/B,aAAa,QAAQ;MACrB,UAAU,IAAI;QAEZ,WAAW,UAAU,MAAM,KAAK;QAEhC,WAAW,SAAS,cAAc;WAC/B,cAAc;WACd,YAAY;MAEjB,YAAY;MACZ,YAAY;SAET;AAAA;AAcX,MAAM,UAAmB,CAAC,OAAO,aAAa;QACpC,EAAE,cAAc;QAChB,EAAE,UAAU;QACZ,KAAK,MAAM,GAAG,YAAY,MAAM,SAAS,MAAM;uCAC1C;SACJ;AAAA;MAGE,uBACT,CAAC,kBACD,CAAC,OAAO,UAAU,SAAS;MACnB,MAAM;YACE,OAAO;;;SAGZ;AAAA;MClCF,iBAAiB,CAAC,KAAU,QAAQ,QAAyB;QAChE,EAAE,UAAU,IAAI,IAAI;QACpB,UAA0E;AAAA,IAC5E;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,iBAAiB;AAAA,MAChE,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK,iBAAiB;AAAA,MAC1D,SAAS,CAAC,MAAM;AAAA,MAChB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,kBAAkB;AAAA,MACjE,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK,iBAAiB;AAAA,MAC1D,SAAS,CAAC,MAAM;AAAA,MAChB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,iBAAiB;AAAA,MAChE,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK,iBAAiB;AAAA,MAC1D,SAAS,CAAC,MAAM;AAAA,MAChB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,eAAe;AAAA,MAC9D,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC,eAAe;AAAA,MACzB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,gBAAgB;AAAA,MAC/D,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC,gBAAgB;AAAA,MAC1B,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,aAAa;AAAA,MAC5D,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC,aAAa;AAAA,MACvB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,SAAS;AAAA,MACxD,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC;AAAA,MACV,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,SAAS;AAAA,MACxD,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC,SAAS;AAAA,MACnB,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,SAAS;AAAA,MACxD,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC;AAAA,MACV,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,cAAc;AAAA,MAC7D,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC;AAAA,MACV,UAAU;AAAA;AAAA,IAEd;AAAA,MACI,IAAI;AAAA,MACJ,KAAK,mBAAmB,IAAI,IAAI,eAAe,eAAe;AAAA,MAC9D,SAAS,MAAM,IAAI,IAAI,aAAa,KAAK;AAAA,MACzC,SAAS,CAAC,WAAW;AAAA,MACrB,UAAU;AAAA;AAAA;QAIZ,YAAY,MAAM,MAAM,GAAG;SAE1B,QACF,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,OAAO,aAAa,OAAO,QAAQ,KAAK,CAAC,YAAY,QAAQ,SAAS,aACjG,IAAI,CAAC;AAAA,iBAAE,WAAS,aAAX,IAAwB,mBAAxB,IAAwB,CAAtB,WAAS;AAA0B;AAAA;AAAA;MAGtC,gBAAwB,CAAC,QAAQ;SACnC,CAAC,EAAE,SAAS,iBAAiB;QAC5B,CAAC;aAAmB;QAEpB,CAAC,SAAS;aACH,EAAE,aAAa;AAAA;QAGtB,QAAQ,WAAW,MAAM;aAClB,YAAY,MACb;AAAA,QACI,aAAa;AAAA,QACb,SAAS,eAAe;AAAA,UAE5B;AAAA,QACI,SAAS,eAAe,KAAK;AAAA;AAAA;WAIpC;AAAA;AAAA;ACxIf,MAAM,mBAAmB,CAAC,EAAE,MAAM,WAAsB,EAAE,UAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKtD,KAAK;AAAA;AAAA,iBAEX,QAAQ,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQpC,MAAM,mBAAmB,CAAC,GAAc,EAAE,UAAmB;AAAA;AAAA;AAAA;AAAA;MAMhD,cAAc,CAAC,QAAgB,UAAiB;QACnD,aAAa,MAAM,SAAS;QAC5B,aAAa,MAAM,SAAS;SAE3B;AAAA,IACH,eAAe,CAAC,GAAe,UAAiB;UACxC,OAAO,WAAW;eACX;AAAA;UAEP,mBAAmB,gBAAgB;eAC5B;AAAA;UAGP,CAAC,CAAC,WAAW,aAAa,SAAS,SAAS,MAAM,MAAM;eACjD;AAAA;aAGJ;AAAA;AAAA,IAEX,aAAa,CAAC,UAAuB;YAC3B,YAAY,eAAe,CAAC,EAAE,WAAW,KAAK,SAAS,aAAa,MAAM;UAG5E,CAAC,aACD,UAAU,KAAK,aAAa,KAC5B,MAAM,UAAU,MAAM,iBAAiB,UAAU,KAAK,YAAY,QACpE;eACS;;;YAIL,EAAE,aAAa,YAAY,OAAO,OAAO;AAAA,QAC3C,YAAY,MAAM,UAAU,MAAM,KAAK,MAAM,UAAU,MAAM,QAAQ;AAAA,QACrE,YAAY,MAAM,UAAU,MAAM,UAAU;AAAA,QAC5C,SAAS,UAAU,KAAK;AAAA,QACxB;AAAA;UAGA,CAAC,aAAa;eACP;AAAA;YAGL,mBAAmB,CAAC,MAAc,cAAsC;cACpE,MAAM,UAAU;eACf,cAAc,OAAO,MAAM,KAAK;AAAA,UACnC,WAAW,KAAK,KAAK,MAAM,UAAU,KAAK,UAAU;AAAA,YAChD,OAAO,UAAU,OAAO,CAAC,MAAM,GAAG,KAAK;AAAA,YACvC,aAAa;AAAA;AAAA;AAAA;UAKrB,QAAQ,QAAQ;eACT,iBAAiB,aAAa,CAAC,YAAY,YAAY,cAAc;AAAA;aAGzE,iBAAiB,aAAa,CAAC,YAAY;AAAA;AAAA;AAAA;MCtEjD,kBAAkB,CAAC;EAC5B,IAAI,OAAO;AAAA,EACX,GAAG,OAAO;AAAA,EACV,SAAS,qBAAqB,OAAO;AAAA;ACVzC,MAAM,kBAAkB,MAAiB;SAC9B;AAAA,IACH,aAAa;AAAA,IACb,SAAS;AAAA;AAAA;MAMJ,eAAe,CAAC,YAAiC;QACpD,YAAY;SAEX;AAAA,IACH,KAAK,MAAM;AAAA,IACX,OAAO,MAAM;gBACC,cAAc;gBACd,UAAU;AAAA;AAAA,IAExB,QAAQ,CAAC,kBAA6C;;YAC5C,SAAS,QAAQ;gBACb,cAAc,uCAAQ,gBAAR,YAAuB;gBACrC,kDAAmB,wBAAW,IAAI,IAAI;aACzC;AAAA;AAAA,IAEX,SAAS,MAAM,UAAU,QAAQ,WAAW;AAAA;AAAA;MCvBvC,iBAAiB,CAAC,QAAgB,iBAA8B,cAAkC;QACrG,EAAE,YAAY,OAAO;MAEvB,CAAC,QAAQ,QAAQ;oBACD,UAAU,IAAI;WACvB;AAAA;kBAGK,WAAW,QAAQ,CAAC,UAAU;UACpC,oBAAoB,cAAc,UAAU;UAC5C,oBAAoB,cAAc,UAAU;AAAA;kBAItC,cAAc;UAEtB,QAAQ,CAAC,EAAE,QAAQ;MACrB,UAAU,OAAO;MACjB,iBAAiB,cAAc,UAAU;MACzC,iBAAiB,cAAc,UAAU;oBAC3B,YAAY;AAAA;kBAGhB,UAAU,OAAO;UAEzB,GAAG,EAAE,UAAU,IAAI;wBACL,MAAM;mBACT,QAAQ,GAAG,GAAG;AAAA,MACzB,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA;AAAA;SAIT;AAAA;MCrCE,qBAAqB,MAAM;MAChC,YAAY;SAET;AAAA,IACH,QAAQ,MAAM;AAAA,IACd,MAAM,MAAM;kBACI;AAAA;AAAA,IAEhB,QAAQ,MAAM;kBACE;AAAA;AAAA;AAAA;MAMX,kBAAkB,CAAC,iBAA+B,MAAM;eACpD;AAAA;MAGJ,mBAAmB,CAAC,QAAgB,iBAA+B,CAAC,MAAkB;MAC3F,aAAa;;QACX,EAAE,YAAY,OAAO;QACrB,SAAS,QAAQ,UAAU,CAAC,MAAM,EAAE,EAAE,UAAU,SAAS;MAC3D,UAAU,GAAG;YACL,QAAQ,EAAE,UAAU,OAAO;AAAA;QAEjC,EAAE,WAAW;MACf,oBAAoB;;SACjB,UAAU,IAAI;AAAA;MAGZ,mBAAmB,MAAM,CAAC,MAAkB;QAC/C,EAAE,WAAW;MACf,oBAAoB;;SACjB,UAAU,OAAO;AAAA;MAGf,cACT,CAAC,QAAgB,MAAkB,oBACnC,CAAC,MAAmB;QACV,EAAE,WAAW;MACf,oBAAoB;;MACpB,CAAC;;QAEC,OAAO,MAAM;MACb;MACA;AAAA;QAGA,EAAE,YAAY,OAAO;QAErB,KAAK,OAAO,OAAO,SAAS,KAAK,CAAC,EAAE,QAAQ,EAAE,SAAS;MACzD,CAAC,IAAI;QACD,OAAO;;WAEJ;oBACS,UAAU,IAAI;;;;;KAO/B,QAAQ,KAAK,OAAO,KAAK,UAAU;AAAA;MAGjC,gBACT,CAAC,QAAgB,MAAkB,iBAA8B,iBAA+B,CAAC,MAAa;MACtG,eAAe;;MACf,CAAC,aAAa;iBAAuB;QAEnC,EAAE,cAAQ;MACZ,OAAO;;MACP,CAAC,CAAC,aAAa,WAAW,SAAS,UAAU,SAAS;;QAEpD,EAAE,YAAY,OAAO;MAEvB,SAAS,QAAQ,UAAU,CAAC,EAAE,QAAQ,EAAE,UAAU,SAAS;MAC3D,SAAS;aAAY;QAEnB,aAAa,CAAC,SAAiB;YACzB,QAAQ,EAAE,UAAU,OAAO;YAC3B,MAAM,EAAE,UAAU,IAAI;mBACf,QAAQ,MAAM,GAAG;AAAA,MAC5B,YAAY;AAAA,MACZ,OAAO;AAAA,MACP,QAAQ;AAAA;AAAA;MAIZ,SAAQ,aAAa;UACf,OAAO,WAAW,QAAQ,SAAS,IAAI,IAAI,SAAS;eAE/C;;;MAIX,SAAQ,WAAW;UACb,OAAO,WAAW,IAAI,QAAQ,SAAS,IAAI,SAAS;eAE/C;;;MAIX,SAAQ,UAAU;QACd,OAAO;;WAEJ;oBACS,UAAU,IAAI;;;UAI1B,QAAQ,QAAQ,KAAK,OAAO,KAAK,UAAU;UAC3C,QAAQ,EAAE,UAAU,OAAO;AAAA;ACxG3C,MAAM,oBAAoB,CAAC,MAAkB,oBAAiC;wBACpD,MAAM,iBAAiB,CAAC,UAAU,QAAQ,WAAW;UACjE,UAAU,gBAAgB;QAC5B,CAAC,SAAS;YACJ,IAAI;AAAA;QAGV,OAAO,SAAS,OAAO,OAAO;QAC9B,MAAM,SAAS,SAAS,OAAO,MAAM,KAAK,QAAQ;QAElD,OAAO,GAAG;aACH;AAAA;QAGP,OAAO,cAAc,SAAS,SAAS,OAAO,QAAQ;YAChD,SAAS,MAAM,OAAO,MAAM,OAAO,SAAS,KAAK,QAAQ;AAAA;WAE5D,CAAC,KAAK;AAAA;AAAA;MAIR,aAAa,CAAC,QAAgB,MAAkB,UAAiB;QACpE,UAAU,KAAK,IAAI;MACrB,CAAC;WAAgB;QAEf,kBAAkB,eAAe;QACjC,eAAe;UACb,YAAY;QAEd,aAAa,gBAAgB;QAC7B,aAAa,YAAY,QAAQ,MAAM;QACvC,WAAW,cAAc,QAAQ,MAAM,iBAAiB;QACxD,cAAc,iBAAiB,QAAQ;QACvC,cAAc;UAEZ,iBAAiB,aAAa;UAC9B,iBAAiB,aAAa;UAC9B,iBAAiB,WAAW;SAE7B;AAAA,IACH,QAAQ,CAAC,UAAqB;YACpB,OAAO,eAAe,QAAQ,iBAAiB;AAAA,QACjD,YAAY;AAAA,QACZ,YAAY;AAAA;UAGZ,CAAC;;wBAEa,OAAM;AAAA;AAAA,IAG5B,SAAS,MAAM;cACH,oBAAoB,aAAa;cACjC,oBAAoB,aAAa;cACjC,oBAAoB,WAAW;sBACvB;AAAA;AAAA;AAAA;MC9Df,MAAM;MAEN,oBAAoB,CAAC,OAAc,YAAiC;QACvE,SAAS,aAAa;SAErB,IAAI,OAAO;AAAA,IACd,KAAK,IAAI,UAAU;AAAA,IACnB,OAAO,YAAY,QAAQ;AAAA,IAC3B,MAAM,CAAC,SAAS,WAAW,QAAQ,MAAM;AAAA;AAAA;MCFpC,cAAc,aAA8B,CAAC,OAAO,YAAY;;QACnE,cAAc,yCAAS,WAAT,YAAmB;SAEhC;AAAA,IACH,cAAc,CAAC,GAAG,QAAQ;YAChB,SAAS,YAAY;YAErB,SAAS,kBAAkB,OAAO;aAEjC,CAAC;AAAA;AAAA;AAAA;MAKP,QAAQ,SAAS,OAAO,CAAC;;"}